{
  "name": "heyosj-site",
  "private": true,
  "version": "1.0.0",
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "new": "node scripts/new-post.mjs",
    "post:new": "node -e \"const tz='America/Indiana/Indianapolis'; const title=(process.env.npm_config_title||process.argv.slice(1).join(' ')||'untitled').trim(); const slug=title.toLowerCase().replace(/[^a-z0-9]+/g,'-').replace(/(^-|-$)/g,''); const d=new Intl.DateTimeFormat('en-CA',{timeZone:tz}).format(new Date()); const fs=require('fs'); const {execSync}=require('child_process'); execSync('mkdir -p content/posts'); const p=`content/posts/${slug}.mdx`; const fm=`---\\n`+`title: \\\"${title}\\\"\\n`+`description: \\\"\\\"\\n`+`date: \\\"${d}\\\"\\n`+`slug: \\\"${slug}\\\"\\n`+`tags: []\\n`+`---\\n\\n## intro\\nwrite your note hereâ€¦\\n`; fs.writeFileSync(p,fm); console.log('Created',p);\"",
    "post:broadcast": "dotenv -e .env.local -- node -e \"const slug=process.argv[1]; if(!slug){console.error('Usage: npm run post:broadcast -- <slug>'); process.exit(1);} const base=process.env.NEXT_PUBLIC_SITE_URL||'https://www.heyosj.com'; const key=process.env.BROADCAST_SECRET; if(!key){console.error('BROADCAST_SECRET missing'); process.exit(1);} const {execSync}=require('child_process'); execSync(`curl -i -L \\\"${base}/api/broadcast/${slug}?key=${key}\\\"`,{stdio:'inherit'});\"",
    "post:latest": "dotenv -e .env.local -- node -e \"(async()=>{ const fs=require('fs'), path=require('path'); const matter=require('gray-matter'); const base=(process.env.NEXT_PUBLIC_SITE_URL||'https://www.heyosj.com').replace(/\\/$/,''); const key=process.env.BROADCAST_SECRET; if(!key){console.error('BROADCAST_SECRET missing'); process.exit(1);} const dir=path.join('content','posts'); if(!fs.existsSync(dir)){console.error('content/posts not found'); process.exit(1);} const files=fs.readdirSync(dir).filter(f=>/\\.(md|mdx)$/.test(f)).map(f=>({f, m: fs.statSync(path.join(dir,f)).mtimeMs})).sort((a,b)=>b.m-a.m); if(!files.length){console.error('No posts'); process.exit(1);} const latest=files[0].f; const raw=fs.readFileSync(path.join(dir, latest), 'utf8'); const fm=(matter(raw).data)||{}; let slug=fm.slug || latest.replace(/\\.(md|mdx)$/,''); slug=slug.toLowerCase().replace(/[^a-z0-9-]+/g,'-').replace(/-+/g,'-').replace(/(^-|-$)/g,''); const url=base + '/api/broadcast/' + slug + '?key=' + encodeURIComponent(key); console.log('POST', url); const res=await fetch(url,{method:'POST'}); const text=await res.text(); console.log(res.status, text); })().catch(e=>{ console.error(e); process.exit(1); });\"",
    "new:post": "node tools/new.mjs post",
    "new:playbook": "node tools/new.mjs playbook",
    "new:lab": "node tools/new.mjs lab"
  },
  "dependencies": {
    "@tailwindcss/typography": "0.5.15",
    "@vercel/analytics": "^1.5.0",
    "clsx": "^2.1.1",
    "gray-matter": "4.0.3",
    "highlight.js": "11.9.0",
    "next": "14.2.5",
    "react": "18.3.1",
    "react-dom": "18.3.1",
    "reading-time": "1.5.0",
    "rehype-highlight": "7.0.0",
    "rehype-stringify": "10.0.0",
    "remark-gfm": "4.0.0",
    "remark-parse": "11.0.0",
    "remark-rehype": "11.1.0",
    "rss": "1.2.2",
    "zod": "3.23.8"
  },
  "devDependencies": {
    "@types/node": "24.2.1",
    "@types/react": "19.1.10",
    "@types/rss": "^0.0.32",
    "autoprefixer": "10.4.19",
    "dotenv-cli": "^10.0.0",
    "postcss": "8.4.39",
    "tailwindcss": "3.4.10",
    "typescript": "5.5.4"
  }
}
